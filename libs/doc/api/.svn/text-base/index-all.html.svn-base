<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_16) on Fri Sep 03 14:13:32 CEST 2010 -->
<TITLE>
Index
</TITLE>

<META NAME="date" CONTENT="2010-09-03">

<LINK REL ="stylesheet" TYPE="text/css" HREF="./stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="./index.html?index-all.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="./allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="./allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="#_A_">A</A> <A HREF="#_C_">C</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_I_">I</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_Z_">Z</A> <HR>
<A NAME="_A_"><!-- --></A><H2>
<B>A</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZInsert.html#addColumns(java.util.Vector)"><B>addColumns(Vector)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Specify which columns to insert
<DT><A HREF="./org/gibello/zql/ZUpdate.html#addColumnUpdate(java.lang.String, org.gibello.zql.ZExp)"><B>addColumnUpdate(String, ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Add one column=value pair to the SET... clause
 This method also keeps track of the column order
<DT><A HREF="./org/gibello/zql/ZqlParser.html#addCustomFunction(java.lang.String, int)"><B>addCustomFunction(String, int)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZUtils.html#addCustomFunction(java.lang.String, int)"><B>addCustomFunction(String, int)</B></A> - 
Static method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql">ZUtils</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#addFrom(java.util.Vector)"><B>addFrom(Vector)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Insert the FROM part of the statement
<DT><A HREF="./org/gibello/zql/ZQuery.html#addGroupBy(org.gibello.zql.ZGroupBy)"><B>addGroupBy(ZGroupBy)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Insert a GROUP BY...HAVING clause
<DT><A HREF="./org/gibello/zql/ZExpression.html#addOperand(org.gibello.zql.ZExp)"><B>addOperand(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Add an operand to the current expression.
<DT><A HREF="./org/gibello/zql/ZQuery.html#addOrderBy(java.util.Vector)"><B>addOrderBy(Vector)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Insert an ORDER BY clause
<DT><A HREF="./org/gibello/zql/ZQuery.html#addSelect(java.util.Vector)"><B>addSelect(Vector)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Insert the SELECT part of the statement
<DT><A HREF="./org/gibello/zql/ZQuery.html#addSet(org.gibello.zql.ZExpression)"><B>addSet(ZExpression)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Insert a SET clause (generally UNION, INTERSECT or MINUS)
<DT><A HREF="./org/gibello/zql/ZUpdate.html#addSet(java.util.Hashtable)"><B>addSet(Hashtable)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Insert a SET... clause in the UPDATE statement
<DT><A HREF="./org/gibello/zql/ZLockTable.html#addTables(java.util.Vector)"><B>addTables(Vector)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql">ZLockTable</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZInsert.html#addValueSpec(org.gibello.zql.ZExp)"><B>addValueSpec(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Specify the VALUES part or SQL sub-query of the INSERT statement
<DT><A HREF="./org/gibello/zql/ZDelete.html#addWhere(org.gibello.zql.ZExp)"><B>addWhere(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZDelete.html" title="class in org.gibello.zql">ZDelete</A>
<DD>Add a WHERE clause to the DELETE statement
<DT><A HREF="./org/gibello/zql/ZQuery.html#addWhere(org.gibello.zql.ZExp)"><B>addWhere(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Insert a WHERE clause
<DT><A HREF="./org/gibello/zql/ZUpdate.html#addWhere(org.gibello.zql.ZExp)"><B>addWhere(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Insert a WHERE... clause in the UPDATE statement
</DL>
<HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZConstant.html#COLUMNNAME"><B>COLUMNNAME</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_E_"><!-- --></A><H2>
<B>E</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/data/ZEval.html#eval(org.gibello.zql.data.ZTuple, org.gibello.zql.ZExp)"><B>eval(ZTuple, ZExp)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZEval.html" title="class in org.gibello.zql.data">ZEval</A>
<DD>Evaluate a boolean expression to true or false (for example, SQL WHERE
 clauses are boolean expressions)
<DT><A HREF="./org/gibello/zql/data/ZEval.html#evalExpValue(org.gibello.zql.data.ZTuple, org.gibello.zql.ZExp)"><B>evalExpValue(ZTuple, ZExp)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZEval.html" title="class in org.gibello.zql.data">ZEval</A>
<DD>Evaluate a numeric or string expression (example: a+1)
</DL>
<HR>
<A NAME="_F_"><!-- --></A><H2>
<B>F</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#FORM_COLUMN"><B>FORM_COLUMN</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#FORM_TABLE"><B>FORM_TABLE</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_G_"><!-- --></A><H2>
<B>G</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZSelectItem.html#getAggregate()"><B>getAggregate()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>If this item is an aggregate function, return the function name.
<DT><A HREF="./org/gibello/zql/ZUtils.html#getAggregateCall(java.lang.String)"><B>getAggregateCall(String)</B></A> - 
Static method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql">ZUtils</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#getAlias()"><B>getAlias()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getAlias()"><B>getAlias()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZOrderBy.html#getAscOrder()"><B>getAscOrder()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZOrderBy.html" title="class in org.gibello.zql">ZOrderBy</A>
<DD>Get the order (ascending or descending)
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#getAttIndex(java.lang.String)"><B>getAttIndex(String)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Return the index  of the attribute corresponding to the name
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#getAttName(int)"><B>getAttName(int)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Return the name of the attribute corresponding to the index
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#getAttValue(int)"><B>getAttValue(int)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Return the value of the attribute corresponding to the index
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#getAttValue(java.lang.String)"><B>getAttValue(String)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Return the value of the attribute whith the given name
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#getColumn()"><B>getColumn()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZInsert.html#getColumns()"><B>getColumns()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Get the columns involved in the INSERT statement.
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getColumnUpdate(java.lang.String)"><B>getColumnUpdate(String)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Get the SQL expression that specifies a given column's update value.
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getColumnUpdate(int)"><B>getColumnUpdate(int)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Get the SQL expression that specifies a given column's update value.
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getColumnUpdateCount()"><B>getColumnUpdateCount()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Returns the number of column/value pairs in the SET... clause.
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getColumnUpdateName(int)"><B>getColumnUpdateName(int)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Get the column name that corresponds to a given index.
<DT><A HREF="./org/gibello/zql/ZTransactStmt.html#getComment()"><B>getComment()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZTransactStmt.html" title="class in org.gibello.zql">ZTransactStmt</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZOrderBy.html#getExpression()"><B>getExpression()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZOrderBy.html" title="class in org.gibello.zql">ZOrderBy</A>
<DD>Get the ORDER BY expression.
<DT><A HREF="./org/gibello/zql/ZSelectItem.html#getExpression()"><B>getExpression()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#getFrom()"><B>getFrom()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Get the FROM part of the statement
<DT><A HREF="./org/gibello/zql/ZGroupBy.html#getGroupBy()"><B>getGroupBy()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZGroupBy.html" title="class in org.gibello.zql">ZGroupBy</A>
<DD>Get the GROUP BY expressions
<DT><A HREF="./org/gibello/zql/ZQuery.html#getGroupBy()"><B>getGroupBy()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Get the GROUP BY...HAVING part of the statement
<DT><A HREF="./org/gibello/zql/ZGroupBy.html#getHaving()"><B>getHaving()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZGroupBy.html" title="class in org.gibello.zql">ZGroupBy</A>
<DD>Get the HAVING clause
<DT><A HREF="./org/gibello/zql/ZLockTable.html#getLockMode()"><B>getLockMode()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql">ZLockTable</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#getNumAtt()"><B>getNumAtt()</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Return the number of attributes in the tupple
<DT><A HREF="./org/gibello/zql/ZExpression.html#getOperand(int)"><B>getOperand(int)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Get an operand according to its index (position).
<DT><A HREF="./org/gibello/zql/ZExpression.html#getOperands()"><B>getOperands()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Get this expression's operands.
<DT><A HREF="./org/gibello/zql/ZExpression.html#getOperator()"><B>getOperator()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Get this expression's operator.
<DT><A HREF="./org/gibello/zql/ZQuery.html#getOrderBy()"><B>getOrderBy()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Get the ORDER BY clause
<DT><A HREF="./org/gibello/zql/ZInsert.html#getQuery()"><B>getQuery()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Get the sub-query (ex. in INSERT INTO table1 SELECT * FROM table2;, the
 sub-query is SELECT * FROM table2;)
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#getSchema()"><B>getSchema()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#getSelect()"><B>getSelect()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Get the SELECT part of the statement
<DT><A HREF="./org/gibello/zql/ZQuery.html#getSet()"><B>getSet()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Get the SET clause (generally UNION, INTERSECT or MINUS)
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getSet()"><B>getSet()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Get the whole SET... clause
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#getTable()"><B>getTable()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZDelete.html#getTable()"><B>getTable()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZDelete.html" title="class in org.gibello.zql">ZDelete</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZInsert.html#getTable()"><B>getTable()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Get the name of the table involved in the INSERT statement.
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getTable()"><B>getTable()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZLockTable.html#getTables()"><B>getTables()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql">ZLockTable</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZConstant.html#getType()"><B>getType()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZConstant.html#getValue()"><B>getValue()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZInsert.html#getValues()"><B>getValues()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Get the VALUES part of the INSERT statement
<DT><A HREF="./org/gibello/zql/ZDelete.html#getWhere()"><B>getWhere()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZDelete.html" title="class in org.gibello.zql">ZDelete</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#getWhere()"><B>getWhere()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Get the WHERE part of the statement
<DT><A HREF="./org/gibello/zql/ZUpdate.html#getWhere()"><B>getWhere()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Get the WHERE clause of this UPDATE statement.
</DL>
<HR>
<A NAME="_I_"><!-- --></A><H2>
<B>I</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZqlParser.html#initParser(java.io.InputStream)"><B>initParser(InputStream)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Initialize (or re-initialize) the input stream for the parser.
<DT><A HREF="./org/gibello/zql/ZUtils.html#isAggregate(java.lang.String)"><B>isAggregate(String)</B></A> - 
Static method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql">ZUtils</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#isAttribute(java.lang.String)"><B>isAttribute(String)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>To know if an attributes is already defined
<DT><A HREF="./org/gibello/zql/ZUtils.html#isCustomFunction(java.lang.String)"><B>isCustomFunction(String)</B></A> - 
Static method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql">ZUtils</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#isDistinct()"><B>isDistinct()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZSelectItem.html#isExpression()"><B>isExpression()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#isForUpdate()"><B>isForUpdate()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZLockTable.html#isNowait()"><B>isNowait()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql">ZLockTable</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZTransactStmt.html#isReadOnly()"><B>isReadOnly()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZTransactStmt.html" title="class in org.gibello.zql">ZTransactStmt</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#isWildcard()"><B>isWildcard()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_M_"><!-- --></A><H2>
<B>M</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/data/ZEval.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZEval.html" title="class in org.gibello.zql.data">ZEval</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZqlParser.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Test program:
 Parses SQL statements from stdin or from a text file.
</DL>
<HR>
<A NAME="_N_"><!-- --></A><H2>
<B>N</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZExpression.html#nbOperands()"><B>nbOperands()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Get the number of operands
<DT><A HREF="./org/gibello/zql/ZConstant.html#NULL"><B>NULL</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZConstant.html#NUMBER"><B>NUMBER</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_O_"><!-- --></A><H2>
<B>O</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/package-summary.html"><B>org.gibello.zql</B></A> - package org.gibello.zql<DD>&nbsp;<DT><A HREF="./org/gibello/zql/data/package-summary.html"><B>org.gibello.zql.data</B></A> - package org.gibello.zql.data<DD>&nbsp;</DL>
<HR>
<A NAME="_R_"><!-- --></A><H2>
<B>R</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZqlParser.html#readExpression()"><B>readExpression()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Parse an SQL Expression (like the WHERE clause of an SQL query).
<DT><A HREF="./org/gibello/zql/ZqlParser.html#readStatement()"><B>readStatement()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Parse an SQL Statement from the parser's input stream.
<DT><A HREF="./org/gibello/zql/ZqlParser.html#readStatements()"><B>readStatements()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Parse a set of SQL Statements from the parser's input stream (all the
 available statements are parsed and returned).
</DL>
<HR>
<A NAME="_S_"><!-- --></A><H2>
<B>S</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZSelectItem.html#setAggregate(java.lang.String)"><B>setAggregate(String)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>Initialize an aggregate function on this item
 (generally SUM, AVG, MAX, MIN)
 Example: SELECT AVG(age) FROM people; -> The aggregate function is AVG.
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#setAlias(java.lang.String)"><B>setAlias(String)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>Associate an alias with the current name.
<DT><A HREF="./org/gibello/zql/ZUpdate.html#setAlias(java.lang.String)"><B>setAlias(String)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZOrderBy.html#setAscOrder(boolean)"><B>setAscOrder(boolean)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZOrderBy.html" title="class in org.gibello.zql">ZOrderBy</A>
<DD>Set the order to ascending or descending (defailt is ascending order).
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#setAtt(java.lang.String, java.lang.Object)"><B>setAtt(String, Object)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Set the value of the given attribute name
<DT><A HREF="./org/gibello/zql/ZTransactStmt.html#setComment(java.lang.String)"><B>setComment(String)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZTransactStmt.html" title="class in org.gibello.zql">ZTransactStmt</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZSelectItem.html#setExpression(org.gibello.zql.ZExp)"><B>setExpression(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>Initialize this SELECT item as an SQL expression (not a column name
 nor wildcard)
 Example: SELECT a+b FROM table1; (a+b is an expression)
<DT><A HREF="./org/gibello/zql/ZGroupBy.html#setHaving(org.gibello.zql.ZExp)"><B>setHaving(ZExp)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZGroupBy.html" title="class in org.gibello.zql">ZGroupBy</A>
<DD>Initiallize the HAVING part of the GROUP BY
<DT><A HREF="./org/gibello/zql/ZLockTable.html#setLockMode(java.lang.String)"><B>setLockMode(String)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql">ZLockTable</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZExpression.html#setOperands(java.util.Vector)"><B>setOperands(Vector)</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Set the operands list
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#setRow(java.lang.String)"><B>setRow(String)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Set the current tuple's column values.
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#setRow(java.util.Vector)"><B>setRow(Vector)</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Set the current tuple's column values.
<DT><A HREF="./org/gibello/zql/ZConstant.html#STRING"><B>STRING</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_T_"><!-- --></A><H2>
<B>T</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZExpression.html#toReversePolish()"><B>toReversePolish()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>String form of the current expression (reverse polish notation).
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Returns a string representation of the object
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZConstant.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZDelete.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZDelete.html" title="class in org.gibello.zql">ZDelete</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZExpression.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZGroupBy.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZGroupBy.html" title="class in org.gibello.zql">ZGroupBy</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZInsert.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZOrderBy.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZOrderBy.html" title="class in org.gibello.zql">ZOrderBy</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZQuery.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZUpdate.html#toString()"><B>toString()</B></A> - 
Method in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_U_"><!-- --></A><H2>
<B>U</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZConstant.html#UNKNOWN"><B>UNKNOWN</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>ZConstant types
</DL>
<HR>
<A NAME="_V_"><!-- --></A><H2>
<B>V</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZUtils.html#VARIABLE_PLIST"><B>VARIABLE_PLIST</B></A> - 
Static variable in class org.gibello.zql.<A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql">ZUtils</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_Z_"><!-- --></A><H2>
<B>Z</B></H2>
<DL>
<DT><A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql"><B>ZAliasedName</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>A name/alias association<br>
 Names can have two forms:
 
 FORM_TABLE for table names ([schema.]table)
 FORM_COLUMN for column names ([[schema.]table.]column)
 <DT><A HREF="./org/gibello/zql/ZAliasedName.html#ZAliasedName()"><B>ZAliasedName()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZAliasedName.html#ZAliasedName(java.lang.String, int)"><B>ZAliasedName(String, int)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZAliasedName.html" title="class in org.gibello.zql">ZAliasedName</A>
<DD>Create a new ZAliasedName given it's full name.
<DT><A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql"><B>ZConstant</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZConstant: a representation of SQL constants<DT><A HREF="./org/gibello/zql/ZConstant.html#ZConstant(java.lang.String, int)"><B>ZConstant(String, int)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZConstant.html" title="class in org.gibello.zql">ZConstant</A>
<DD>Create a new constant, given its name and type.
<DT><A HREF="./org/gibello/zql/ZDelete.html" title="class in org.gibello.zql"><B>ZDelete</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZDelete: an SQL DELETE statement.<DT><A HREF="./org/gibello/zql/ZDelete.html#ZDelete(java.lang.String)"><B>ZDelete(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZDelete.html" title="class in org.gibello.zql">ZDelete</A>
<DD>Create a DELETE statement on a given table
<DT><A HREF="./org/gibello/zql/data/ZEval.html" title="class in org.gibello.zql.data"><B>ZEval</B></A> - Class in <A HREF="./org/gibello/zql/data/package-summary.html">org.gibello.zql.data</A><DD>Evaluate SQL expressions<DT><A HREF="./org/gibello/zql/data/ZEval.html#ZEval()"><B>ZEval()</B></A> - 
Constructor for class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZEval.html" title="class in org.gibello.zql.data">ZEval</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZExp.html" title="interface in org.gibello.zql"><B>ZExp</B></A> - Interface in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>A common interface for all SQL Expressions (ZQueries, ZExpressions and
 ZConstants are ZExps).<DT><A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql"><B>ZExpression</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZExpression: an SQL Expression
 An SQL expression is an operator and one or more operands 
 Example: a AND b AND c -> operator = AND, operands = (a, b, c)<DT><A HREF="./org/gibello/zql/ZExpression.html#ZExpression(java.lang.String)"><B>ZExpression(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Create an SQL Expression given the operator
<DT><A HREF="./org/gibello/zql/ZExpression.html#ZExpression(java.lang.String, org.gibello.zql.ZExp)"><B>ZExpression(String, ZExp)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Create an SQL Expression given the operator and 1st operand
<DT><A HREF="./org/gibello/zql/ZExpression.html#ZExpression(java.lang.String, org.gibello.zql.ZExp, org.gibello.zql.ZExp)"><B>ZExpression(String, ZExp, ZExp)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZExpression.html" title="class in org.gibello.zql">ZExpression</A>
<DD>Create an SQL Expression given the operator, 1st and 2nd operands
<DT><A HREF="./org/gibello/zql/ZFromItem.html" title="class in org.gibello.zql"><B>ZFromItem</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZFromItem: an SQL FROM clause (example: the FROM part of a SELECT...FROM).<DT><A HREF="./org/gibello/zql/ZFromItem.html#ZFromItem()"><B>ZFromItem()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZFromItem.html" title="class in org.gibello.zql">ZFromItem</A>
<DD>Create a new FROM clause.
<DT><A HREF="./org/gibello/zql/ZFromItem.html#ZFromItem(java.lang.String)"><B>ZFromItem(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZFromItem.html" title="class in org.gibello.zql">ZFromItem</A>
<DD>Create a new FROM clause on a given table.
<DT><A HREF="./org/gibello/zql/ZGroupBy.html" title="class in org.gibello.zql"><B>ZGroupBy</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZGroupBy: an SQL GROUP BY...HAVING clause<DT><A HREF="./org/gibello/zql/ZGroupBy.html#ZGroupBy(java.util.Vector)"><B>ZGroupBy(Vector)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZGroupBy.html" title="class in org.gibello.zql">ZGroupBy</A>
<DD>Create a GROUP BY given a set of Expressions
<DT><A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql"><B>ZInsert</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZInsert: an SQL INSERT statement<DT><A HREF="./org/gibello/zql/ZInsert.html#ZInsert(java.lang.String)"><B>ZInsert(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZInsert.html" title="class in org.gibello.zql">ZInsert</A>
<DD>Create an INSERT statement on a given table
<DT><A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql"><B>ZLockTable</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZLockTable: an SQL LOCK TABLE statement<DT><A HREF="./org/gibello/zql/ZLockTable.html#ZLockTable()"><B>ZLockTable()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZLockTable.html" title="class in org.gibello.zql">ZLockTable</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZOrderBy.html" title="class in org.gibello.zql"><B>ZOrderBy</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>An SQL query ORDER BY clause.<DT><A HREF="./org/gibello/zql/ZOrderBy.html#ZOrderBy(org.gibello.zql.ZExp)"><B>ZOrderBy(ZExp)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZOrderBy.html" title="class in org.gibello.zql">ZOrderBy</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql"><B>ZqlParser</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZqlParser: an SQL parser<DT><A HREF="./org/gibello/zql/ZqlParser.html#ZqlParser(java.io.InputStream)"><B>ZqlParser(InputStream)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Create a new parser to parse SQL statements from a given input stream.
<DT><A HREF="./org/gibello/zql/ZqlParser.html#ZqlParser()"><B>ZqlParser()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZqlParser.html" title="class in org.gibello.zql">ZqlParser</A>
<DD>Create a new parser: before use, call initParser(InputStream) to
 specify an input stream for the parsing.
<DT><A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql"><B>ZQuery</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZQuery: an SQL SELECT statement<DT><A HREF="./org/gibello/zql/ZQuery.html#ZQuery()"><B>ZQuery()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZQuery.html" title="class in org.gibello.zql">ZQuery</A>
<DD>Create a new SELECT statement
<DT><A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql"><B>ZSelectItem</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZSelectItem: an item in the SELECT part of an SQL query.<DT><A HREF="./org/gibello/zql/ZSelectItem.html#ZSelectItem()"><B>ZSelectItem()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>Create a new SELECT item
<DT><A HREF="./org/gibello/zql/ZSelectItem.html#ZSelectItem(java.lang.String)"><B>ZSelectItem(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZSelectItem.html" title="class in org.gibello.zql">ZSelectItem</A>
<DD>Create a new SELECT item, given its name (for column names and wildcards).
<DT><A HREF="./org/gibello/zql/ZStatement.html" title="interface in org.gibello.zql"><B>ZStatement</B></A> - Interface in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZStatement: a common interface for all SQL statements.<DT><A HREF="./org/gibello/zql/ZTransactStmt.html" title="class in org.gibello.zql"><B>ZTransactStmt</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZTransactStmt: an SQL statement that concerns database transactions
 (example: COMMIT, ROLLBACK, SET TRANSACTION)<DT><A HREF="./org/gibello/zql/ZTransactStmt.html#ZTransactStmt(java.lang.String)"><B>ZTransactStmt(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZTransactStmt.html" title="class in org.gibello.zql">ZTransactStmt</A>
<DD>&nbsp;
<DT><A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data"><B>ZTuple</B></A> - Class in <A HREF="./org/gibello/zql/data/package-summary.html">org.gibello.zql.data</A><DD>&nbsp;<DT><A HREF="./org/gibello/zql/data/ZTuple.html#ZTuple()"><B>ZTuple()</B></A> - 
Constructor for class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>The simplest constructor
<DT><A HREF="./org/gibello/zql/data/ZTuple.html#ZTuple(java.lang.String)"><B>ZTuple(String)</B></A> - 
Constructor for class org.gibello.zql.data.<A HREF="./org/gibello/zql/data/ZTuple.html" title="class in org.gibello.zql.data">ZTuple</A>
<DD>Create a new tuple, given it's column names
<DT><A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql"><B>ZUpdate</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>ZUpdate: an SQL UPDATE statement.<DT><A HREF="./org/gibello/zql/ZUpdate.html#ZUpdate(java.lang.String)"><B>ZUpdate(String)</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZUpdate.html" title="class in org.gibello.zql">ZUpdate</A>
<DD>Create an UPDATE statement on a given table.
<DT><A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql"><B>ZUtils</B></A> - Class in <A HREF="./org/gibello/zql/package-summary.html">org.gibello.zql</A><DD>&nbsp;<DT><A HREF="./org/gibello/zql/ZUtils.html#ZUtils()"><B>ZUtils()</B></A> - 
Constructor for class org.gibello.zql.<A HREF="./org/gibello/zql/ZUtils.html" title="class in org.gibello.zql">ZUtils</A>
<DD>&nbsp;
</DL>
<HR>
<A HREF="#_A_">A</A> <A HREF="#_C_">C</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_I_">I</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_Z_">Z</A> 

<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="./index.html?index-all.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="./allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="./allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
